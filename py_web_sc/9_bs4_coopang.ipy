import requests
from bs4 import BeautifulSoup
import re

url = "https://www.coupang.com/np/search?q=%EB%85%B8%ED%8A%B8%EB%B6%81&channel=user&component=&eventCategory=SRP&trcid=&traid=&sorter=scoreDesc&minPrice=&maxPrice=&priceRange=&filterType=&listSize=36&filter=&isPriceRange=false&brand=&offerCondition=&rating=0&page=1&rocketAll=false&searchIndexingToken=1=4&backgroundColor="
headers = {"User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.106 Whale/2.8.108.15 Safari/537.36"}
res = requests.get(url, headers=headers)

res.raise_for_status()
soup = BeautifulSoup(res.text, "lxml")

items = soup.find_all("li", attrs={"class":re.compile("^search-product")})
#print(items.find("div", attrs={"class":"name"}).get_text())
n= 0

for item in items:

    # 광고제품음 제외한다.
    ad_badge = item.find("span", attrs = {"class":"ad-badge-text"})
    if ad_badge:
        print("< 광고 상품 제외합니다.")
        continue
    
    name = item.find("div", attrs={"class":"name"}).get_text()
    #애플 제품 제외

    if "Apple" in name:
        print("< Apple 상품 제외 합니다.")
        continue

    price = item.find("strong", attrs= {"class":"price-value"}).get_text()
    # 리뷰 100개 이상 평점은 4.5 이상만 조회한다. 

    rate = item.find("em", attrs = {"class":"rating"}) #평점
    if rate:
        rate = rate.get_text()
    else:
        print("< 평점없는 상품 제외합니다.")
        continue
    num = item.find("span",attrs={"class":"rating-total-count"}) #리뷰 
    if num:
        num = num.get_text()
        num = num[1:-1]
    else:
        print("< 평점 수 없는 상품 제외합니다.")
        continue

    if float(rate) >= 4.5 and int(num)>=100:
        print(n, "=>","제품명 :",name,"/ 가격 : ", price,"/ 평점 : ", rate,"/평가 인원 : ",num)

    n += 1
  
    